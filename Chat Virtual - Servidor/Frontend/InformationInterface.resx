<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAxFAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAE/hJ
        REFUeNrtnXl0FVWexz+VhCRAAgiShV0hIIhoC0qLCyA0iAQ9tsuIW5+enh66jx61p2e6z8xxaM3Ynunp
        cY4N7Yzdinsv7uCGggTCZlgktOyLKLKFfQ3ZXl7NH3kJ72Whtlv3Vr13v3WOEnipelXfz/3dW3f5XdDS
        0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJKNhkpd8cdSWv330zOagCSSWlk0Z0cetOTLIaTRQZD
        yW7381G2cgaTrZzgDLuo4RC1RDQA4VI2PehPX4ZxEf0poBs5dHR4pyb1nKSaPRxkB1vYwy4OUUNUAxDc
        0t6DQQxhNIPpSz65Qu+tmsPsZjflbGE7B6nXAARHPSliJKO5nP7k+H5H1exnI6tYw1YO0KABUKd0BjCC
        iVzPAHKlX72a/azmEyrYQY0GQL7113ETY+hFhtJvYnKEL/iExWwPJwbhA2AAY7mJMfQ5z+ucfB1mLZ9S
        yuawVQphAqAL11LMJAYG9lsfpJSPWERlGGNBsNWfn7CCs5iBPyJs4HGGk65NE6N0ruYpdhINgfnnjkqe
        ZxKdtH3elMl3mcORUFl/7qjiQ6aRo210p07cytzQmn8OgjJm0FPb6TTsX8NcqkNuftPRQDm30VHbak8G
        o3kh9CW/5XGWDyg+zzCUVkwDeYrDSWb+OQhe5aoUHIC3ra78hG1Jan7TcYgn6autbq00JjCfSJLb33is
        437dIkhUf2ZxLCXMbzxqeJdR2vZGZXA761PI/KZjLz9TMIYZwLL/e86koP0mJhHeT+04YDCB1SlqftPx
        LT9M1ZfDXB7jaIrb39geeDEV3wuG8BYN2v7YUc7Y1LK/mA3a9oSjkofITA3zs3gkafv6vBy1PJMKg0Z5
        zKJO293O8QGXJrf9RbynbT7vUcH1yWv/yJTs8HF6HOAumabIm7l2M//LZclfx3lWDuM4wwZZs4tlATCd
        5+mv3bWlzkzCYKUcBOQAcA+z6aGddeDKGFkI+A+Awb3M0va7QqA8/EvTs/kVJ3TTztVRx6vkhx2Af02R
        SR5+Ha/7vbbA3yrgHp6ks47nHjQM09+2gJ8ATNdNP89KYwz4iYB/ANzNbC7UDgpw6Fo/EfALgPHM0eth
        BCJwmDVhAuBKnuNi7ZxAl0bxDZvDAkA/XuM72jWh6swNrGV3GADowWwmaseEK4fLWc7hoAPQgX/nx9ot
        X1RIPxaKzmUqGoC/p0Rx2qZk1mCyWSQ2WaVYACbwLF21Tz7qCo6zWuQJRa5V7c/bKhc6GHTlAoXemNRy
        0P9cspVMZ0kQAejIczygsnA8wA8Uhh+DrSzgDRnJAldxJ3tEnUxcfT2D6Srt786t3KjyC1BNBzmL/0fz
        OA+KIk1UssXv8gs6qHv4PZhCIWoVxZR1qfu4W9SpxACQx29UPv8eTGEgKaRMnhDV2hIBgMEj3KDuaXRn
        Chdjyit/7cqUlye2HzPFLC4X8Ro4kf9SlfGiA/2YShEZpFNEb6X272M3JgX0pjcFZHPS38sN4gjlIkqv
        V+XzNtepeuh38jjdYmW/q+KcjKc5CZgYmCxlLu/6/Uq4l9tY6/Uk3t8CfqrO/p5MZBhBUW5cTJaCYh/+
        jXup9nYSr22AUep6/vMppldg7I+XtPbIzdzh9RTeAMjmn1R5kE8xfQLQ8FOqLH7mNbmENwCmcZuaO89j
        Kr1lvnkHVd9hhrcTeGkD5PELFfltshnKRPpgEtVTjuEfed/L8JAXAO5npIo7vpYXm1v+KZJU43zqyYP8
        jVq3v+6+ChjMQyry3uYzkd50oStd6aoTbgLcyST3v+wegB8wQP69FlJMYfJt3+lNHZnhviS4BWCkiqHf
        QorppRt+rTWB78sFIJ2H6CP7LvO5mUIaQgCAIbtuzOZRt6sw3DUCR3OL3DvM4jomUIiJSWE7j/cEJwOT
        jP8o38itqK7k+/xBFgDp/APd5T7QobzUXPentfOl17EyAHtJmhjUsZgKuZdN40e8zVE5ABTxPbl3V8Bk
        LrD8qhFqA7GZaB3LKJe/gejlXM9cN+Q4131y6/9eIWr6GdSzXIX9kMmP3OQScA7AxXLn/jW2/MPx4mdQ
        xzI+V7V98I1upuU4B2AKF8m0fxqFoSn9Su2HTtzhfIKPUwC6cZ+8pnZjt4+237aKnU+PcArAWK6QaX94
        6v4A2A/5zjuEnAHQgftkjf9p+13pLgr8BGC4rI0Nwmd/eRDshyFOl+Y7A2CinLQvYSz9AcnomM5UZw1B
        JwBcIGf+jw7+njTO2Z4DTgC4ghHa/tb2ByT4N6mACX4BMNn/GVhhtD9w6XwnO5kdYB+AC5yRpe1XppEM
        8QOAKxiq7Y+3f3lQk3lfyHg/AJjkbwUQPvsD0/JvLQeVgF0AfK4AtP1C5aASsAvAQIq0/SGxHy60Py5o
        F4BxdPPr2xYwVdsvWtfYnepjD4As/9LvFDCN3tp+0Rptd82mPQAK/VqFXcg0Xfr9ebA239nsAXCpPxmA
        dPD3TdlcJRKAq/xYhFdAsQ7+/ulqe57ZASCLq7X9IbMfLrU3M8AOAAXi+wC1/b6rF5eIAqC/6FkA2n4J
        yhYHwFViO4G1/ZI02o67dgAQ2gcYNvtXhNV+GEIXEQB0ZHAq278yvNv39rGz8aw1AHniEkFo+6WqC/3E
        ACBo909tv2R1pL8IAIrEJCXW9iuQjQ58awAGilgKpu1Xoous93CwBqCf9++h7Vek3tbruKwA6OR9C9h8
        bb8qFZDnFYAOXjfi0vYrVI51F54VAHnWDFnZH5aUzgb1yWU/dLZ+hbcCINfLO0DY7F+eXPZDpnUyL6uZ
        Yx3d510Kl/11rGBFsBZ5iZBl1iArAIa43fxChf3uMwk1sJYKOrR6azLauAMDg9qwoDLcKwAuN5WSZf9R
        vo1dxSCT0a7Lf4SBNjffMKhiMx+xPxwAZHj9gKt8IPJK/27ej13HZIqk9KWVvEBWOOyHrDaDWJysavjh
        zq8pN/ibbfzJ7yuGKFu5ZRVuBYBj1PVePoFSppXDVgA4dDJV7A/NHVp+0QyRV5Nvv9F8j3It6UqP2BiZ
        yYlQvzwKBECW/cepaH7kHZjcjPoASY8sl8mMoQEwqGQlb3JcAyCz9J9kBXUAROVvXADkxL1ubmVDYPYo
        UAqAzOBvYDQ3XVQ//PDvXCgkwb5u+ac0AHlMTWn7w33nnquAfKbSV8JDiMa2ZE7DJC0wVYBBJgNibwQm
        1RwI3ZZ2HgHIk2K/QRUfxAZqTHK5rdn4boofXx8eiO2fYbCJT/grNakEQB7FUko/1LGtORIM4ia3Y1TC
        lRu3AO8k6SF8I/AAgDz7Ib6xYhANDADxCud+pq4bgXLt11IFQCSI9gc10JrB6xS23GjVqgrYGDz7o9SI
        HcJwXGYy23mUPbmOegDqOcJXQYiP2zjtDYCzQbM/jQO8pjAGRMnnljYX3Ixo3k7NZAnvsisIAJz1GgGi
        wbIfoE7pdCyTtHaae53jJuF3IiCybJlaAbCdqvjFBcFo+qncIDZq4+pmcBrHm70+y6r4ZmAuk+inW/5h
        0mnvADS3ArozjYtC+raboqrnpFcADnKw8Q8F3EpRyMe+U05V7LL6iFUbIMbQRUwmHxNTIxAuAM56jQBV
        7IRLuIUCXfeHTwea4rfrCNCd0/tGMJ7OzXW/jgEhUqX14KQFALfRsKPAzDKaSr+h40CY9FVs8qR7APpi
        7Gw4Y+YmyxNJMW22/ohFGyBKw8FQz3pOZdXyrWcAgIN8o59lKHWK3SIAONs8GScm3QoIifZZvwPY61b/
        Kv4H/Q4QGm237ge0BKAEYI11d4JWALXKzvwUOxHga47opxk61bLFzsfsAHCArfp5hk6V4gCoYW38j7oz
        KBTazAFRAMCq2FQ3rfBoDbVCACgB2ESlfqKhUh2r7X3QXgTY17IVoCuBgOsAm0QCUMOS+B91X0DgtZZ9
        IgGAcvF9ATqK+KiVdlttNgAoAfhSdIewnlfgo46x1O5H7UaAIyyO/9Gredp+X7XezkCwMwDgU6pFfT9t
        v8/61H6FbQuAEoB1oioBbb/POkap/Q/bjwBHEk/r1kRtv+9yUAE4W2UloBLQ9kvQAidvbDYBKAH4IpEs
        52MC2n4JOsJCJx93EgGO8p4u/YHXUjb4BQAs5FhLU7X9gVKUj5wN3NkGoARgPcvi/86+pdp+SdrJAme/
        4CwC1PFn66UG2n6Feoe9fgIAnyXWMHYagtp+aTrK205/xQEAJQDH+LMu/YHVfGcNQDcRAD5kj/0YoO2X
        qFrecj5zyxEAJQDbeVOX/kBqaeKAnV8RAF5JnCDWXgwQa78ZoMNKBoZ89Ot5wTojUGs5zLhYwkzYQin3
        yC396XRTmhss/r4uaOfOzsb1wJ5mr+xsSpsoc/NrblJuRniBYrokxgDD19Kfy9+RE5A5ROltpomEL1kW
        u+sGliTOpJfB5ct2VgKKAQCW8zF3t1/ixdf9aQlpGIOpWk5hYBChnGWy59FvsN8ya/lkHaoEoJ7ZibwZ
        vpX+pnMGfwZh42ZWDaySb38ds+0tAxEAQAyBlbze2iS/7A+PIpSzVP4qmqX81e2vum9ZvZw48dhIefsN
        GtTYX8cfOSMVgBKAjTzX8gGknv1V7IodX3OYNSrsh3l85P6XvSTef5G7uCzxr1INgW95J1b1RSmnTIX9
        x5nlZc2GyyqgBGA//514x6kX/qNEiBChjpWUuhko9a6XWOnl1731rrzDh4l/kZpLx6OsZoka+zfzrLce
        J9cAlABU8TSHU9DxBOQV2l/PLOt00L5FgBKAFbwkIwYYAekIbv34FNoPi/iT11N4331pNjcyqiUColsD
        NVSQDYBJF4qU4nCWbUQwAIO9rKFMlf2H+LX7179zbnnSTIBp/ImEZLIm/jUIowzk3nZ64+VoPy9TgwFE
        Wctie4k4xMvkMZ7yfhoRRelj5gilKuBqGupVaj8s4v9EnMYjACUADTzdMiFJsr8NGET5QqX9lTwhJoez
        5whQArCXX7bMJZjcCERZS6k6+yM8yXIxpxLVmlrCM63zUvqFgNoqRnnph7d5OVDPciZADi9xR2sARJtl
        0o1LFO4ebnCK11hgvRWHf/obtyfmbw5AYZoJMJh3GN7SLj9Kq7qt6wyirGOxSvuPcR/zxZ1OUFEqYywc
        ZQ9T6Jj4wPxAwFB2QAWlKu2P8KS48C8QABgLsJ1qvpfYrkimQWKTdSxSaT+8yK/i93INEABljQh8SXeu
        bllekwOBANhfysOiN/AR2JoqYyxEWMelFCUfAgGwfwsPtszTFCgAYgicYTXjyUsuBAJg/zFm2M/+Z19+
        jKrs4Kdsb+shavtd6wQ/51M/Tiz4hTrWEviWXUyNDd81x4Bz/9X2O1SUx3nWn1ML71GJIbCTo4wlKxGB
        MFYEgbD/GX7j13RDH7rUYgisa41A+NoCAbH/MXFZWiUAkIDAuDAjEAj7f+en/fjVqd6MQCeub+m34euE
        EZH2V6i2H+bxCFV+XsC3UZUYAmvI4oqWE3jC0CAMgP1R5vGI35NufRxWK2Ms1FHKYW5oXREEGwGTdZT6
        GXnt2P87HuWQ35fxdVy1jLEQ5QuOtdUcDG5rwKQiCPY/5n3Kp2IAmiuCNhEIaoOwMfgHwH4pG/b6PrOi
        uTn4FVfSvS0EglUVBMD+EzzBf8rar1nC1JoYAptYz7X0aI0AAUIgAPYf55/5vbxVplLmVsUQ2M0yBnFx
        awSCEgcCYP82ZvCWzAtKmlwXQ+AgS+jOiNZeByEOBMD+JTyYuENj0gDQjMApFlLLlYkDRUGIA8rtb+AV
        Hra347dISX7eMxv/N53/YGDbNqhBQLn9x3ma/1HxBSTPr47FgY0sYwCD2uJRRRxQbv9GHmKO2Ll+AQWg
        GYFK5mNwOZltGyITAMX2N/AuM/hc1eUVVbkzATIo5tcMa22IzK+l2P5DPMUcGT1+gYkAcXEgylZKWy/0
        MSWmWlZs/xIe4g1V6QWUAtBcFRxhPrsZ1rKDSA4AJuvV2X+E3/IvTrZ4TDIAmhGIsJ7PyGVQU3tA1giB
        yXo+U2N/A4t5mJdldfeeT8q732Ivhh0o5udc2/hDVEIloND+7czmVU6pN19xBEiIA1G28gFHGUJXGUNE
        yuw/xfM8ynyVa8sDFgES4gCMYAb3k+tvFFBkf4SPmEVZ6zwKGoB4CDIYxwxuIsf06X1Aif31fM4fed/N
        pi4pA0AcBFmM5ZfcQEYUBEOgxP5N/Ja5nAya+QEEIA6CbtzCjxllZovsGZBufwPbeIW/JG61pwGwhwB0
        Yww/FFcdSLa/ns+Zw6LEfRU0AE4hyOI6budWepmYntaySrX/JAt5k4WcCLL5gQYgAQKDodzCdHOo2cF9
        HFjPQjn2f8083qAiOK96oQWgBQZ53Mg0cxy93FQHm/nY/463E6zkYz7mm/CshQ/JMr0mCIx08xImmpMZ
        ZfY0bH99g13M87fr7RQb+IwFrFO9lixJAUiIBBjZ5mDGN2Jg/ZposJd5LROZirR+IwtZyIagdO4mLQBt
        YjDSnGheQy+yoO2IYHCIuW431TufIhymggWsYWM4rQ8pAC0xyEiP9GaYeRVXc2kjCPE3ZlDNe+wQbfxW
        1rKKjewOW8BPGgBagmCSkdlQwDAuMUcziEJ6GNkANSxinYgWWYTj7GMPq9nEZvYEYSBXA9BGPIC0dLOz
        mc9ABjDMLFraq6w7XejoYoeJKFXUcIDDfMUWdrODfVSpnb2jAXCEQj31nV/PquxBF/pSQCaXkUkGg1uv
        SYgzfQdVmGzhBKfZyVn2U612rYgGwDUKJ8hmXsvMigZdyDhPnXBKzeRsLS0tLS0tLS0tLS0tLS0tLS0t
        LS0tLS0tLS0f9P9WDW6Uoinj0gAAAABJRU5ErkJggg==
</value>
  </data>
</root>